plugins {
    id 'java'
}

group = 'eu.raidersheaven'
version = '1.21_R5'

libsDirName = "F:/JetBrains/-- Paper Plugins --/RHSignItemPaper"

repositories {
    mavenCentral()
    maven {
        name = "papermc"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "placeholderapi"
        url = "https://repo.extendedclip.com/content/repositories/placeholderapi/"
    }
    maven {
        name = "jitpack"
        url = "https://jitpack.io"
    }
}

configurations {
    exportedLibs
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21.4-R0.1-SNAPSHOT")

    compileOnly 'me.clip:placeholderapi:2.11.6'
    compileOnly 'com.github.MilkBowl:VaultAPI:1.7.1'

    configurations.implementation.extendsFrom(configurations.exportedLibs)
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('paper-plugin.yml') {
        expand props
    }
}

jar {
    from {
        configurations.exportedLibs.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
